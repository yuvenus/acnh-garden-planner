{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cell-options/cell-options.component.ts","webpack:///src/app/cell-options/cell-options.component.html","webpack:///src/app/classes/content.class.ts","webpack:///src/app/custom-dropdown/custom-dropdown.component.ts","webpack:///src/app/custom-dropdown/custom-dropdown.component.html","webpack:///src/app/garden/garden-cell/garden-cell.component.ts","webpack:///src/app/garden/garden-cell/garden-cell.component.html","webpack:///src/app/garden/garden.component.ts","webpack:///src/app/garden/garden.component.html","webpack:///src/app/pipes/disable-color.pipe.ts","webpack:///src/app/services/cell-options.service.ts","webpack:///src/enums.ts","webpack:///src/environments/environment.ts","webpack:///src/imports.ts","webpack:///src/lists.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CellOptionsComponent","cellOptionsService","disableColorPipe","cellOptions","colorOptions","contentEnum","flowerEnum","colorEnum","selectedCellOption","EMPTY","selectedColorOption","RED","showClearConfirmation","showChangeGridConfirmation","newGridSize","fileInput","event","validColors","includes","setColorOption","setCellOptionsChanges","file","setCellOption","importConfig","exportConfig","clearGrid","changeGridSize","contentClass","cellOption","color","CustomDropdownComponent","disabled","selectedValueChange","emit","value","emitNewValue","GardenCellComponent","currentSelection","content","contentChange","changeType","GardenComponent","cellContentsEnum","gridSize","localStorage","getItem","parseInt","grid","JSON","parse","cellContents","cellOptionsChangesSubscription","setItem","stringify","toString","initGrid","getCellOptionsChanges","subscribe","cellObj","clearGridConfirmation","reprocessGrid","unsubscribe","Array","fill","map","createEmptyRows","sizeDifference","length","extraRows","row","newArray","concat","slice","size","contents","target","files","finalString","tempGrid","fileReader","FileReader","onload","fileString","result","onloadend","split","splitRow","inside","insideSplit","readAsText","csvContent","csvString","rowList","cell","push","join","blob","Blob","type","navigator","msSaveBlob","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","DisableColorPipe","COSMOS","ORANGE","YELLOW","PINK","WHITE","BLACK","HYACINTH","BLUE","PURPLE","LILY","MUM","GREEN","PANSY","ROSE","GOLD","TULIP","WINDFLOWER","FENCE","filter","colorOpt","name","CellOptionsService","cellOptionsObj","cellOptionsChanges","asObservable","next","providedIn","flowers","colors","cellBackground","environment","production","Object","label","flower","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'acnh-garden-planner';\n}\n","<div class=\"nav-container\">\r\n    <app-cell-options></app-cell-options>\r\n</div>\r\n<div class=\"main-container\">\r\n    <app-garden></app-garden>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { declarations, imports, providers } from '../imports';\n\n@NgModule({\n  declarations: [AppComponent, ...declarations],\n  imports: imports,\n  providers: providers,\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CellOptionsService } from '../services/cell-options.service';\nimport { DisableColorPipe } from '../pipes/disable-color.pipe'\nimport * as enums from '../../enums';\nimport * as lists from '../../lists';\n\n@Component({\n  selector: 'app-cell-options',\n  templateUrl: './cell-options.component.html',\n  styleUrls: ['./cell-options.component.scss'],\n  providers: [DisableColorPipe]\n})\nexport class CellOptionsComponent implements OnInit {\n\n  cellOptions = lists.cellOptions;\n  colorOptions = lists.colorOptions;\n\n  contentEnum = enums.cellContents;\n  flowerEnum = enums.flowers;\n  colorEnum = enums.colors;\n\n  selectedCellOption = this.contentEnum.EMPTY;\n  selectedColorOption = this.colorEnum.RED;\n\n  showClearConfirmation = false;\n  showChangeGridConfirmation = false;\n\n  newGridSize = 0;\n\n  fileInput = null;\n\n  constructor(private cellOptionsService: CellOptionsService,\n              private disableColorPipe: DisableColorPipe) { }\n\n  ngOnInit(): void {\n  }\n\n  setCellOption(event) {\n    this.selectedCellOption = event;\n    if (this.disableColorPipe.validColors[this.selectedCellOption] && \n        !this.disableColorPipe.validColors[this.selectedCellOption].includes(this.selectedColorOption)) {\n      this.selectedColorOption = enums.colors.RED;\n      this.setColorOption(this.selectedColorOption);\n    }\n    this.cellOptionsService.setCellOptionsChanges('selectedCellOption', event)\n  }\n\n  setColorOption(event) {\n    this.selectedColorOption = event;\n    this.cellOptionsService.setCellOptionsChanges('selectedColorOption', event)\n  }\n\n  clearGrid() {\n    this.cellOptionsService.setCellOptionsChanges('clearGridConfirmation', true);\n    this.cellOptionsService.setCellOptionsChanges('clearGridConfirmation', false);\n    this.showClearConfirmation = false;\n  }\n\n  changeGridSize() {\n    this.cellOptionsService.setCellOptionsChanges('gridSize', +this.newGridSize);\n    this.showChangeGridConfirmation = false;\n  }\n\n  importConfig(event) {\n    this.cellOptionsService.setCellOptionsChanges('importConfig', {import: true, file: event});\n    this.cellOptionsService.setCellOptionsChanges('importConfig', {import: false, file: null});\n\n    this.fileInput = null;\n  }\n\n  exportConfig() {\n    this.cellOptionsService.setCellOptionsChanges('exportConfig', true);\n    this.cellOptionsService.setCellOptionsChanges('exportConfig', false);\n  }\n}\n","<div class=\"cell-options-container\">\n    <div class=\"form-group\">\n        <label class=\"form-label\">Flower</label>\n        <app-custom-dropdown [options]=\"cellOptions\" [selectedValue]=\"selectedCellOption\" (selectedValueChange)=\"setCellOption($event)\"></app-custom-dropdown>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"form-label\">Color</label>\n        <app-custom-dropdown [options]=\"(colorOptions | disableColor:selectedCellOption)\" \n                             [disabled]=\"selectedCellOption == contentEnum.EMPTY || selectedCellOption == contentEnum.FENCE\"\n                             [(selectedValue)]=\"selectedColorOption\"\n                             (selectedValueChange)=\"setColorOption($event)\"></app-custom-dropdown>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"form-label\">Clear Grid</label>\n        <button pButton type=\"button\" label=\"Clear\" class=\"ui-button-danger\" (click)=\"showClearConfirmation = true\"></button>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"form-label\">Change Grid Size</label>\n        <button pButton type=\"button\" label=\"Change Grid Size\" class=\"ui-button-success\" (click)=\"showChangeGridConfirmation = true\"></button>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"form-label\">Import Config</label>\n        <div class=\"file-upload-button\">\n            <button pButton type=\"button\" label=\"Import\"></button>\n            <input type=\"file\" accept=\".txt\" (change)=\"importConfig($event)\" [(ngModel)]=\"fileInput\" /> \n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"form-label\">Export Config</label>\n        <button pButton type=\"button\" label=\"Export\" class=\"ui-button-secondary\" (click)=\"exportConfig()\"></button>\n    </div>\n</div>\n\n<p-dialog header=\"Clear Grid?\" [(visible)]=\"showClearConfirmation\" [draggable]=\"false\">\n    <div class=\"dialog-content\">\n        Are you sure you want to clear the grid?\n    </div>\n    <p-footer>\n        <button pButton type=\"button\" label=\"Clear\" class=\"ui-button-danger\" (click)=\"clearGrid()\"></button>\n        <button pButton type=\"button\" label=\"Cancel\" class=\"ui-button-secondary\" (click)=\"showClearConfirmation = false\"></button>\n    </p-footer>\n</p-dialog>\n\n<p-dialog header=\"Change Grid Size\" [(visible)]=\"showChangeGridConfirmation\"[draggable]=\"false\">\n    <div class=\"dialog-content\">\n        <div class=\"form-group\">\n            <label class=\"form-label\">Changing the grid size may cause clipping to occur!</label>\n            <label class=\"form-label\">Choose values between 4 and 40.</label>\n            <input pInputText type=\"text\" pKeyFilter=\"pint\" [(ngModel)]=\"newGridSize\">\n        </div>\n    </div>\n    <p-footer>\n        <button pButton type=\"button\" label=\"Change\" class=\"ui-button-success\" (click)=\"changeGridSize()\" [disabled]=\"newGridSize < 4 || newGridSize > 40\"></button>\n        <button pButton type=\"button\" label=\"Cancel\" class=\"ui-button-secondary\" (click)=\"showChangeGridConfirmation = false\"></button>\n    </p-footer>\n</p-dialog>","import * as enums from '../../enums';\r\n\r\nexport class contentClass {\r\n    cellOption: enums.cellContents | enums.flowers = enums.cellContents.EMPTY;\r\n    color: enums.colors = enums.colors.RED;\r\n}","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-custom-dropdown',\n  templateUrl: './custom-dropdown.component.html',\n  styleUrls: ['./custom-dropdown.component.scss']\n})\nexport class CustomDropdownComponent implements OnInit {\n\n  @Input() options;\n  @Input() selectedValue;\n  @Input() disabled = false;\n  @Output() selectedValueChange = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  emitNewValue(event) {\n    this.selectedValueChange.emit(event.value);\n  }\n\n}\n","<p-dropdown [options]=\"options\" \n            [disabled]=\"disabled\"\n            [filter]=\"true\"\n            [(ngModel)]=\"selectedValue\"\n            (onChange)=\"emitNewValue($event)\"\n            [showTransitionOptions]=\"'0ms'\"\n            [hideTransitionOptions]=\"'0ms'\">\n        </p-dropdown>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { contentClass } from '../../classes/content.class';\n\n@Component({\n  selector: 'app-garden-cell',\n  templateUrl: './garden-cell.component.html',\n  styleUrls: ['./garden-cell.component.scss']\n})\nexport class GardenCellComponent implements OnInit {\n\n  @Input() currentSelection = new contentClass;\n  @Input() content = new contentClass;\n  @Output() contentChange = new EventEmitter()\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  changeType() {\n    if (this.content.cellOption == this.currentSelection.cellOption && \n        this.content.color == this.currentSelection.color) {\n      this.content = new contentClass;\n    }\n    else {\n      this.content.cellOption = this.currentSelection.cellOption;\n      this.content.color = this.currentSelection.color;\n\n      this.contentChange.emit(this.content);\n    }\n  } \n\n}\n","<div class=\"garden-cell {{ content.cellOption }} {{ (content.color != null ? content.color : '') }}\" (click)=\"changeType()\"></div>\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport * as enums from '../../enums';\nimport { Subscription } from 'rxjs';\nimport { CellOptionsService } from '../services/cell-options.service';\nimport { contentClass } from '../classes/content.class';\nimport cloneDeep from 'lodash.clonedeep';\n\n@Component({\n  selector: 'app-garden',\n  templateUrl: './garden.component.html',\n  styleUrls: ['./garden.component.scss']\n})\nexport class GardenComponent implements OnInit, OnDestroy {\n\n  // enums\n  cellContentsEnum = enums.cellContents;\n\n  gridSize = localStorage.getItem('gridSize') ? parseInt(localStorage.getItem('gridSize')) : 10;\n  grid = localStorage.getItem('gardenGrid') ? JSON.parse(localStorage.getItem('gardenGrid')) : [];\n\n  currentSelection = new contentClass;\n\n  cellContents = {\n    content: new contentClass\n  }\n\n  cellOptionsChangesSubscription = new Subscription;\n\n  @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\n    localStorage.setItem('gardenGrid', JSON.stringify(this.grid));\n    localStorage.setItem('gridSize', this.gridSize.toString());\n  }\n\n  constructor(private cellOptionsService: CellOptionsService) { }\n\n  ngOnInit(): void {\n    if (this.grid === []) {\n      this.initGrid(this.gridSize);\n    }\n\n    this.cellOptionsChangesSubscription = this.cellOptionsService.getCellOptionsChanges()\n      .subscribe(cellObj => {\n        if (this.currentSelection.cellOption != cellObj.selectedCellOption) {\n          this.currentSelection.cellOption = cellObj.selectedCellOption;\n        }\n        else if (this.currentSelection.color != cellObj.selectedColorOption) {\n          this.currentSelection.color = cellObj.selectedColorOption;\n        }\n        else if (cellObj.clearGridConfirmation) {\n          this.initGrid(this.gridSize);\n        }\n        else if (this.gridSize != cellObj.gridSize) {\n          this.gridSize = cellObj.gridSize;\n          localStorage.setItem('gridSize', this.gridSize.toString());\n          this.reprocessGrid(this.gridSize);\n        }\n        else if (cellObj.importConfig.import) {\n          this.importConfig(cellObj.importConfig.file);\n        }\n        else if (cellObj.exportConfig) {\n          this.exportConfig();\n        }\n      })\n  }\n\n  ngOnDestroy() {\n    this.cellOptionsChangesSubscription.unsubscribe();\n\n    localStorage.setItem('gardenGrid', JSON.stringify(this.grid));\n  }\n\n  initGrid(gridSize) {\n    this.grid = new Array(gridSize)\n      .fill(0)\n      .map(() => this.createEmptyRows(gridSize, this.cellContents));\n  }\n\n  reprocessGrid(gridSize) {\n    const sizeDifference = this.grid[0].length - gridSize;\n\n    if (sizeDifference < 0) {\n      const extraRows = new Array(sizeDifference * -1)\n        .fill(0)\n        .map(() => this.createEmptyRows(gridSize, this.cellContents));\n\n      this.grid = this.grid\n        .map(row => {\n          const newArray = this.createEmptyRows((sizeDifference) * -1, this.cellContents) \n          row = row.concat(newArray);\n          return row;\n        })\n        .concat(extraRows);\n    }\n    else {\n      this.grid = this.grid\n        .slice(0, gridSize)\n        .map(row => row.slice(0, gridSize));\n    }\n\n    localStorage.setItem('gardenGrid', JSON.stringify(this.grid));\n  }\n\n  private createEmptyRows(size, contents) {\n    return new Array(size)\n      .fill(0)\n      .map(() => cloneDeep(contents))\n  }\n\n  importConfig(event) {\n    if (event && event.target && event.target.files && event.target.files.length > 0) {\n      let finalString = '';\n      let tempGrid = [];\n      const file = event.target.files[0];\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const fileString = fileReader.result.toString();\n        finalString = fileString;\n      }\n      \n      fileReader.onloadend = () => {\n        tempGrid = finalString.split('\\n');\n        tempGrid = tempGrid.map(row => {\n          let splitRow = row.split(',');\n          splitRow = splitRow.map(\n            inside => {\n              const insideSplit = inside.split('|');\n              if (insideSplit.length == 2) {\n                return ({content: {cellOption: insideSplit[0], color: insideSplit[1]}})\n              }\n              return ({content: new contentClass});\n            }\n          );\n          return splitRow;\n        });\n  \n        this.grid = tempGrid;\n      }\n  \n      fileReader.readAsText(file);\n    }\n  }\n\n  exportConfig() {\n    let csvContent = [];\n    let csvString = '';\n    for (let row of this.grid) {\n      let rowList = [];\n      for (let cell of row) {\n        rowList.push(`${cell.content.cellOption}|${cell.content.color}`);\n      }\n      csvContent.push(`${rowList.join(',')}`);\n    }\n\n    csvString = csvContent.join('\\n');\n\n    // thanks stackoverflow https://stackoverflow.com/questions/14964035/how-to-export-javascript-array-info-to-csv-on-client-side\n    var blob = new Blob([csvString], { type: 'text/plain' });\n    if (navigator.msSaveBlob) { // IE 10+\n        navigator.msSaveBlob(blob, \"my_garden.txt\");\n    } else {\n        const link = document.createElement(\"a\");\n        if (link.download !== undefined) { // feature detection\n            // Browsers that support HTML5 download attribute\n            var url = URL.createObjectURL(blob);\n            link.setAttribute(\"href\", url);\n            link.setAttribute(\"download\", \"my_garden.txt\");\n            link.style.visibility = 'hidden';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n  }\n    \n}\n","<div class=\"garden-grid\">\n    <div class=\"garden-grid-row\" *ngFor=\"let row of grid\">\n        <div *ngFor=\"let cell of row\">\n            <app-garden-cell [currentSelection]=\"currentSelection\" [(content)]=\"cell.content\"></app-garden-cell>\n        </div>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as enums from '../../enums';\r\n\r\n@Pipe({ name: 'disableColor' })\r\nexport class DisableColorPipe implements PipeTransform {\r\n\r\n    flowerEnum = enums.flowers;\r\n    colorEnum = enums.colors;\r\n\r\n    validColors = {\r\n        [this.flowerEnum.COSMOS]: [\r\n            this.colorEnum.RED,\r\n            this.colorEnum.ORANGE,\r\n            this.colorEnum.YELLOW,\r\n            this.colorEnum.PINK,\r\n            this.colorEnum.WHITE,\r\n            this.colorEnum.BLACK\r\n        ],\r\n        [this.flowerEnum.HYACINTH]: [\r\n            this.colorEnum.RED,\r\n            this.colorEnum.ORANGE,\r\n            this.colorEnum.YELLOW,\r\n            this.colorEnum.BLUE,\r\n            this.colorEnum.PURPLE,\r\n            this.colorEnum.PINK,\r\n            this.colorEnum.WHITE\r\n        ],\r\n        [this.flowerEnum.LILY]: [\r\n            this.colorEnum.RED,\r\n            this.colorEnum.ORANGE,\r\n            this.colorEnum.YELLOW,\r\n            this.colorEnum.PINK,\r\n            this.colorEnum.WHITE,\r\n            this.colorEnum.BLACK\r\n        ],\r\n        [this.flowerEnum.MUM]: [\r\n            this.colorEnum.RED,\r\n            this.colorEnum.YELLOW,\r\n            this.colorEnum.GREEN,\r\n            this.colorEnum.PINK,\r\n            this.colorEnum.PURPLE,\r\n            this.colorEnum.WHITE,\r\n        ],\r\n        [this.flowerEnum.PANSY]: [\r\n            this.colorEnum.RED,\r\n            this.colorEnum.ORANGE,\r\n            this.colorEnum.YELLOW,\r\n            this.colorEnum.BLUE,\r\n            this.colorEnum.PURPLE,\r\n            this.colorEnum.WHITE,\r\n        ],\r\n        [this.flowerEnum.ROSE]: [\r\n            this.colorEnum.RED,\r\n            this.colorEnum.ORANGE,\r\n            this.colorEnum.YELLOW,\r\n            this.colorEnum.BLUE,\r\n            this.colorEnum.PURPLE,\r\n            this.colorEnum.PINK,\r\n            this.colorEnum.WHITE,\r\n            this.colorEnum.BLACK,\r\n            this.colorEnum.GOLD\r\n        ],\r\n        [this.flowerEnum.TULIP]: [\r\n            this.colorEnum.RED,\r\n            this.colorEnum.ORANGE,\r\n            this.colorEnum.YELLOW,\r\n            this.colorEnum.PURPLE,\r\n            this.colorEnum.PINK,\r\n            this.colorEnum.WHITE,\r\n            this.colorEnum.BLACK\r\n        ],\r\n        [this.flowerEnum.WINDFLOWER]: [\r\n            this.colorEnum.RED,\r\n            this.colorEnum.ORANGE,\r\n            this.colorEnum.BLUE,\r\n            this.colorEnum.PURPLE,\r\n            this.colorEnum.PINK,\r\n            this.colorEnum.WHITE\r\n        ]\r\n    }\r\n\r\n    transform(colorOptions, selectedCellOption) {\r\n        if (selectedCellOption == enums.cellContents.EMPTY || selectedCellOption == enums.cellContents.FENCE) {\r\n            return colorOptions;\r\n        }\r\n        else {\r\n            return colorOptions.filter(colorOpt => this.validColors[selectedCellOption].includes(colorOpt.value));\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as enums from '../../enums';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CellOptionsService {\n  cellOptionsObj = {\n    selectedCellOption: enums.cellContents.EMPTY,\n    selectedColorOption: enums.colors.RED,\n    clearGridConfirmation: false,\n    gridSize: localStorage.getItem('gridSize') ? parseInt(localStorage.getItem('gridSize')) : 10,\n    importConfig: {import: false, file: null},\n    exportConfig: false\n  }\n\n  cellOptionsChanges = new BehaviorSubject(this.cellOptionsObj);\n\n  constructor() { }\n\n  getCellOptionsChanges () {\n    return this.cellOptionsChanges.asObservable();\n  }\n\n  setCellOptionsChanges(type, value) {\n    this.cellOptionsObj[type] = value;\n    this.cellOptionsChanges.next(this.cellOptionsObj);\n  }\n}\n","enum flowers {\r\n    COSMOS = 'cosmos',\r\n    HYACINTH = 'hyacinth',\r\n    LILY = 'lily',\r\n    MUM = 'mum',\r\n    PANSY = 'pansy',\r\n    ROSE = 'rose',\r\n    TULIP = 'tulip',\r\n    WINDFLOWER = 'windflower'\r\n};\r\n\r\nenum colors {\r\n    RED = 'red',\r\n    ORANGE = 'orange',\r\n    YELLOW = 'yellow',\r\n    GREEN = 'green',\r\n    BLUE = 'blue',\r\n    PURPLE = 'purple',\r\n    PINK = 'pink',\r\n    WHITE = 'white',\r\n    BLACK = 'black',\r\n    GOLD = 'gold'\r\n}\r\n\r\nenum cellContents {\r\n    EMPTY = 'empty',\r\n    FENCE = 'fence',\r\n} \r\n\r\nenum cellBackground {\r\n    GRASS,\r\n    DIRT\r\n}\r\n\r\nexport { flowers, colors, cellContents, cellBackground }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { GardenComponent } from './app/garden/garden.component';\r\nimport { GardenCellComponent } from './app/garden/garden-cell/garden-cell.component';\r\nimport { CellOptionsComponent } from './app/cell-options/cell-options.component';\r\nimport { CustomDropdownComponent } from './app/custom-dropdown/custom-dropdown.component';\r\nimport { DisableColorPipe } from './app/pipes/disable-color.pipe';\r\n\r\nexport const declarations = [\r\n    GardenComponent,\r\n    GardenCellComponent,\r\n    CellOptionsComponent,\r\n    CustomDropdownComponent,\r\n    DisableColorPipe\r\n]\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\n\r\nexport const imports = [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    DropdownModule,\r\n    ButtonModule,\r\n    DialogModule,\r\n    KeyFilterModule\r\n]\r\n\r\nimport { CellOptionsService } from './app/services/cell-options.service';\r\n\r\nexport const providers = [\r\n    CellOptionsService\r\n]\r\n","import * as enums from './enums';\r\n\r\nconst cellOptions = Object.keys(enums.cellContents)\r\n    .map(content => ({label: enums.cellContents[content], value: enums.cellContents[content]}))\r\n    .concat(Object.keys(enums.flowers)\r\n        .map(flower => ({label: enums.flowers[flower], value: enums.flowers[flower]})));\r\n\r\n    \r\nconst colorOptions = Object.keys(enums.colors)\r\n    .map(color => ({label: enums.colors[color], value: enums.colors[color]}));\r\n\r\n\r\nexport { cellOptions, colorOptions }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}